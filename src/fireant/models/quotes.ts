import axios from "axios";
import Joi from "joi";
import { PIPELINE, RequestConfig } from "../pipeline.const";

export const quotes: PIPELINE = {
  name: "quotes",
  config: ({ start, end, symbol }: RequestConfig) => ({
    url: `/symbols/${symbol}/historical-quotes`,
    params: {
      startDate: start,
      endDate: end,
      limit: 100,
    },
  }),
  schema: [
    { name: "date", type: "DATETIME" },
    { name: "symbol", type: "STRING" },
    { name: "priceHigh", type: "INT64" },
    { name: "priceLow", type: "INT64" },
    { name: "priceOpen", type: "INT64" },
    { name: "priceAverage", type: "INT64" },
    { name: "priceClose", type: "INT64" },
    { name: "priceBasic", type: "INT64" },
    { name: "totalVolume", type: "INT64" },
    { name: "dealVolume", type: "INT64" },
    { name: "putthroughVolume", type: "INT64" },
    { name: "totalValue", type: "INT64" },
    { name: "putthroughValue", type: "INT64" },
    { name: "buyForeignQuantity", type: "INT64" },
    { name: "buyForeignValue", type: "INT64" },
    { name: "sellForeignQuantity", type: "INT64" },
    { name: "sellForeignValue", type: "INT64" },
    { name: "buyCount", type: "INT64" },
    { name: "buyQuantity", type: "INT64" },
    { name: "sellCount", type: "INT64" },
    { name: "sellQuantity", type: "INT64" },
    { name: "adjRatio", type: "INT64" },
    { name: "currentForeignRoom", type: "INT64" },
    { name: "propTradingNetDealValue", type: "INT64" },
    { name: "propTradingNetPTValue", type: "unknown" },
    { name: "propTradingNetValue", type: "INT64" },
  ],
  validationSchema: Joi.object({
    date: Joi.string() ,
    symbol: Joi.string() ,
    priceHigh: Joi.number().allow(null) ,
    priceLow: Joi.number().allow(null),
    priceOpen: Joi.number().allow(null),
    priceAverage: Joi.number().allow(null),
    priceClose: Joi.number().allow(null),
    priceBasic: Joi.number().allow(null),
    totalVolume: Joi.number().allow(null),
    dealVolume: Joi.number().allow(null),
    putthroughVolume: Joi.number().allow(null),
    totalValue: Joi.number().allow(null),
    putthroughValue: Joi.number().allow(null),
    buyForeignQuantity: Joi.number().allow(null),
    buyForeignValue: Joi.number().allow(null),
    sellForeignQuantity: Joi.number().allow(null),
    sellForeignValue: Joi.number().allow(null),
    buyCount: Joi.number().allow(null),
    buyQuantity: Joi.number().allow(null),
    sellCount: Joi.number().allow(null),
    sellQuantity: Joi.number().allow(null),
    adjRatio: Joi.number().allow(null),
    currentForeignRoom: Joi.number().allow(null),
    propTradingNetDealValue: Joi.number().allow(null),
    propTradingNetPTValue: Joi.number().allow(null),
    propTradingNetValue: Joi.number().allow(null),
  }),
  transform: (res: axios.AxiosResponse['data']) => res
};
